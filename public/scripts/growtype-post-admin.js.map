{"version":3,"file":"/scripts/growtype-post-admin.js","mappings":"AAAAA,EAAIC","sources":["webpack://plugin/./resources/scripts/growtype-post-admin.js"],"sourcesContent":["$ = jQuery;\n\nfunction growtypePostAdminShowNotice(data, success = true) {\n    if (Array.isArray(data)) {\n        data.forEach((msg) => {\n            growtypePostAdminRenderNotice(msg)\n        });\n    } else {\n        growtypePostAdminRenderNotice(data)\n    }\n}\n\nfunction growtypePostAdminRenderNotice(data, success = true, autoDisappear = false) {\n    let message = data.message && data.message.length > 0 ? data.message : 'Data was updated.';\n\n    success = data.success ?? success;\n\n    let alertHtml = '';\n    const alertWrapperClass = 'growtype-auth-alert-wrapper';\n    const alertContentClass = 'growtype-auth-alert';\n\n    let alertWrapper = '<div class=\"' + alertWrapperClass + '\"></div>';\n    let alertContent = `\n    <div class=\"${alertContentClass} alert fade show ${!success ? 'alert-danger' : 'alert-success'} alert-dismissible\" role=\"alert\">\n        <div class=\"growtype-auth-alert-message\">${message}</div>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n    </div>\n`;\n\n    if ($('.' + alertWrapperClass).length > 0) {\n        // If the wrapper already exists, just append the content\n        alertHtml = alertContent;\n        $('.' + alertWrapperClass).append(alertHtml);\n    } else {\n        // If the wrapper doesn't exist, create it and append the content inside\n        alertHtml = $(alertWrapper).append(alertContent).prop('outerHTML'); // Convert to HTML string\n        $('body').append(alertHtml);\n    }\n\n    // if (data.redirect_url) {\n    //     if (window.confirm('Auth is required. Do you want to proceed?')) {\n    //         window.location.href = data.redirect_url;\n    //     }\n    // }\n\n    if (autoDisappear) {\n        setTimeout(() => {\n            $('.growtype-auth-alert-wrapper').remove();\n        }, 3000);\n    }\n\n    growtypePostAdminCloseNotice()\n}\n\nfunction growtypePostAdminCloseNotice() {\n    $('.growtype-auth-alert-wrapper .btn-close').click(function () {\n        $(this).closest('.growtype-auth-alert-wrapper').remove();\n    });\n}\n\nfunction growtypePostAdminFormShowLoader(form) {\n    // Add the loading class\n    form.addClass('is-loading');\n\n    // Create the loader container\n    const loaderWrapper = $('<div class=\"growtype-post-loader-wrapper\"></div>');\n    const loaderSpinner = $('<div class=\"growtype-post-loader-spinner\"></div>');\n    const loaderText = $('<div class=\"growtype-post-loader-text\"></div>');\n\n    // Define the list items\n    const steps = [\n        'Analyzing topic and keywords',\n        'Generating article outline',\n        'Writing introduction',\n        'Creating main body content',\n        'Enhancing readability and flow',\n        'Generating supporting images',\n        'Writing conclusion and summary',\n        'Finalizing and formatting the article'\n    ];\n\n    loaderWrapper.append(loaderSpinner);\n\n    if (form.attr('data-type') === 'growtype-post-content') {\n        steps.forEach((step, index) => {\n            const listItem = $(`<div class=\"loader-step\" data-step=\"${index}\">${step}<span class=\"dots\"></span></div>`);\n            loaderText.append(listItem);\n        });\n\n        loaderWrapper.append(loaderText);\n\n        loaderText.find(`.loader-step[data-step=\"0\"]`).addClass('is-active');\n\n        // Animate the steps\n        let currentStep = 0;\n\n        function animateDots(stepElement) {\n            let dots = '';\n            const dotsInterval = setInterval(() => {\n                dots += '.';\n                if (dots.length > 3) dots = '';\n                stepElement.find('.dots').text(dots);\n            }, 500); // Animate dots every 500ms\n\n            return dotsInterval;\n        }\n\n        function showNextStep() {\n            if (currentStep < steps.length) {\n                const currentStepElement = loaderText.find(`.loader-step[data-step=\"${currentStep}\"]`);\n                const dotsInterval = animateDots(currentStepElement);\n\n                const delay = Math.floor(Math.random() * (4000 - 2000 + 1)) + 2000; // Random delay between 2 and 6 seconds\n                setTimeout(() => {\n                    clearInterval(dotsInterval); // Stop dots animation for the current step\n                    currentStepElement.find('.dots').text(''); // Clear dots\n                    currentStepElement.addClass('is-completed'); // Mark as completed\n\n                    currentStep++;\n                    if (currentStep < steps.length) {\n                        loaderText.find(`.loader-step[data-step=\"${currentStep}\"]`).addClass('is-active');\n                        showNextStep(); // Call recursively for the next step\n                    }\n                }, delay);\n            }\n        }\n\n        showNextStep();\n    }\n\n    form.append(loaderWrapper);\n}\n\nfunction growtypePostAdminFormHideLoader(form) {\n    // Remove the loader and the loading class\n    form.find('.growtype-post-loader-wrapper').remove();\n    form.removeClass('is-loading');\n}\n"],"names":["$","jQuery"],"sourceRoot":""}